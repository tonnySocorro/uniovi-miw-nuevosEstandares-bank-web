{"ast":null,"code":"var _jsxFileName = \"/Users/tonny/copia del poyecto/my-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { Contract, ethers } from \"ethers\";\nimport { useState, useEffect, useRef } from 'react';\nimport bankManifest from \"./contracts/Bank.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const bank = useRef(null);\n  useEffect(() => {\n    initContracts();\n  }, []);\n  let initContracts = async () => {\n    await getBlockchain();\n  };\n  let onSubmitDeposit = async e => {\n    e.preventDefault();\n    const BNBamount = parseFloat(e.target.elements[0].value);\n\n    // Wei to BNB se pasa con ethers.utils recibe un String!!!\n    const tx = await bank.current.deposit({\n      value: ethers.utils.parseEther(String(BNBamount)),\n      gasLimit: 6721975,\n      gasPrice: 20000000000\n    });\n    await tx.wait();\n  };\n  let getBlockchain = async () => {\n    let provider = await detectEthereumProvider();\n    if (provider) {\n      await provider.request({\n        method: 'eth_requestAccounts'\n      });\n      const networkId = await provider.request({\n        method: 'net_version'\n      });\n      provider = new ethers.providers.Web3Provider(provider);\n      const signer = provider.getSigner();\n      bank.current = new Contract(bankManifest.networks[networkId].address, bankManifest.abi, signer);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmitDeposit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"P7UUSIHteT6Csd07K4v+DADmDEc=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","detectEthereumProvider","Contract","ethers","useState","useEffect","useRef","bankManifest","jsxDEV","_jsxDEV","App","_s","bank","initContracts","getBlockchain","onSubmitDeposit","e","preventDefault","BNBamount","parseFloat","target","elements","value","tx","current","deposit","utils","parseEther","String","gasLimit","gasPrice","wait","provider","request","method","networkId","providers","Web3Provider","signer","getSigner","networks","address","abi","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","step","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/Users/tonny/copia del poyecto/my-app/src/index.js"],"sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport {Contract, ethers} from \"ethers\";\nimport { useState, useEffect, useRef } from 'react';\nimport bankManifest from \"./contracts/Bank.json\";\n\nfunction App(){\n  const bank = useRef(null);\n  \n  useEffect( () => {\n      initContracts();\n  }, [])\n\n  let initContracts = async () => {\n      await getBlockchain();\n  }\n  \nlet onSubmitDeposit = async (e) => {\n  e.preventDefault();\n\n  const BNBamount = parseFloat(e.target.elements[0].value);\n\n  // Wei to BNB se pasa con ethers.utils recibe un String!!!\n  const tx = await bank.current.deposit({\n      value: ethers.utils.parseEther(String(BNBamount)),\n      gasLimit: 6721975,\n      gasPrice: 20000000000,\n  });\n\n  await tx.wait();\n}\n\n\n  let getBlockchain = async () => {\n      let provider = await detectEthereumProvider();\n      if(provider) {\n          await provider.request({ method: 'eth_requestAccounts' });\n          const networkId = await provider.request({ method: 'net_version' })\n\n          provider = new ethers.providers.Web3Provider(provider);\n          const signer = provider.getSigner();\n\n          bank.current = new Contract(\n              bankManifest.networks[networkId].address,\n              bankManifest.abi,\n              signer\n          );\n\n      }\n      return null;\n  }\n\n\n  return (\n      <div>\n          <h1>Bank</h1>\n          <form onSubmit= { (e) => onSubmitDeposit(e) } >\n                <input type=\"number\" step=\"0.01\" />\n                <button type=\"submit\">Deposit</button>\n            </form>\n\n      </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,sCAAsC;AAC7C,OAAOC,sBAAsB,MAAM,2BAA2B;AAC9D,SAAQC,QAAQ,EAAEC,MAAM,QAAO,QAAQ;AACvC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,YAAY,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAMC,IAAI,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEzBD,SAAS,CAAE,MAAM;IACbQ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,aAAa,CAAC,CAAC;EACzB,CAAC;EAEH,IAAIC,eAAe,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAGC,UAAU,CAACH,CAAC,CAACI,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;;IAExD;IACA,MAAMC,EAAE,GAAG,MAAMX,IAAI,CAACY,OAAO,CAACC,OAAO,CAAC;MAClCH,KAAK,EAAEnB,MAAM,CAACuB,KAAK,CAACC,UAAU,CAACC,MAAM,CAACV,SAAS,CAAC,CAAC;MACjDW,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEF,MAAMP,EAAE,CAACQ,IAAI,CAAC,CAAC;EACjB,CAAC;EAGC,IAAIjB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIkB,QAAQ,GAAG,MAAM/B,sBAAsB,CAAC,CAAC;IAC7C,IAAG+B,QAAQ,EAAE;MACT,MAAMA,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACzD,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAc,CAAC,CAAC;MAEnEF,QAAQ,GAAG,IAAI7B,MAAM,CAACiC,SAAS,CAACC,YAAY,CAACL,QAAQ,CAAC;MACtD,MAAMM,MAAM,GAAGN,QAAQ,CAACO,SAAS,CAAC,CAAC;MAEnC3B,IAAI,CAACY,OAAO,GAAG,IAAItB,QAAQ,CACvBK,YAAY,CAACiC,QAAQ,CAACL,SAAS,CAAC,CAACM,OAAO,EACxClC,YAAY,CAACmC,GAAG,EAChBJ,MACJ,CAAC;IAEL;IACA,OAAO,IAAI;EACf,CAAC;EAGD,oBACI7B,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbtC,OAAA;MAAMuC,QAAQ,EAAKhC,CAAC,IAAKD,eAAe,CAACC,CAAC,CAAG;MAAA2B,QAAA,gBACvClC,OAAA;QAAOwC,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEZ;AAACpC,EAAA,CAzDQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA2DZ,MAAM0C,IAAI,GAAGpD,QAAQ,CAACqD,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT/C,OAAA,CAACC,GAAG;EAAAkC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACR,CAAC;AAAC,IAAAI,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}