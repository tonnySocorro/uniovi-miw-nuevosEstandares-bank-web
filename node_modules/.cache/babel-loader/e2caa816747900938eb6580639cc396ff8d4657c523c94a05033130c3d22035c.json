{"ast":null,"code":"var _jsxFileName = \"/Users/tonny/blockchain/bank/my-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { Contract, ethers } from \"ethers\";\nimport { useState, useEffect, useRef } from 'react';\nimport bankManifest from \"./contracts/Bank.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const bank = useRef(null);\n  const [bnbBalance, setBNBBalance] = useState(0);\n  const [interestGenerated, setInterestGenerated] = useState(0);\n  const [bmiwBalance, setBMIWBalance] = useState(0);\n  useEffect(() => {\n    initContracts();\n    updateBalances();\n  }, []);\n  let clickWithdrawWithFee = async () => {\n    const feeAmount = 0.05;\n\n    // Realizar el retiro con la tarifa\n    const tx = await bank.current.withdrawWithFee({\n      value: ethers.utils.parseEther(String(feeAmount))\n    });\n    await tx.wait();\n    updateBalances();\n  };\n  let updateBalances = async () => {\n    if (bank.current) {\n      try {\n        const bnbBalance = await bank.current.getBNBBalance();\n        const interestGenerated = await bank.current.getInterestGenerated();\n        const bmiwBalance = await bank.current.getBMIWBalance();\n        setBNBBalance(bnbBalance.toString());\n        setInterestGenerated(interestGenerated.toString());\n        setBMIWBalance(bmiwBalance.toString());\n      } catch (error) {\n        console.error(\"Error updating balances:\", error);\n      }\n    }\n  };\n  let initContracts = async () => {\n    await getBlockchain();\n  };\n  let onSubmitDeposit = async e => {\n    e.preventDefault();\n    const BNBamount = parseFloat(e.target.elements[0].value);\n\n    // Wei to BNB se pasa con ethers.utils recibe un String!!!\n    const tx = await bank.current.deposit({\n      value: ethers.utils.parseEther(String(BNBamount)),\n      gasLimit: 6721975,\n      gasPrice: 20000000000\n    });\n    await tx.wait();\n    updateBalances();\n  };\n  let clickWithdraw = async e => {\n    await await bank.current.withdraw();\n    updateBalances();\n  };\n  let getBlockchain = async () => {\n    let provider = await detectEthereumProvider();\n    if (provider) {\n      await provider.request({\n        method: 'eth_requestAccounts'\n      });\n      const networkId = await provider.request({\n        method: 'net_version'\n      });\n      provider = new ethers.providers.Web3Provider(provider);\n      const signer = provider.getSigner();\n      bank.current = new Contract(bankManifest.networks[networkId].address, bankManifest.abi, signer);\n    }\n    return null;\n  };\n  const onSubmitLockedDeposit = async e => {\n    e.preventDefault();\n    const BNBamount = parseFloat(e.target.elements[0].value);\n    const tx = await bank.current.depositWithDoubleInterestAndLock({\n      value: ethers.utils.parseEther(String(BNBamount)),\n      gasLimit: 6721975,\n      gasPrice: 20000000000\n    });\n    await tx.wait();\n  };\n  const onClickLockedWithdraw = async () => {\n    await await bank.current.withdrawWithLock();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"BNB Balance: \", bnbBalance, \" BNB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Interest Generated: \", interestGenerated, \" BNB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"BMIW Balance: \", bmiwBalance, \" BMIW\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dep\\xF3sito con Inter\\xE9s Normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => onSubmitDeposit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clickWithdraw(),\n        children: \" Withdraw \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clickWithdrawWithFee(),\n        children: \"Withdraw with Fee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dep\\xF3sito con el Doble de Inter\\xE9s y Bloqueo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => onSubmitLockedDeposit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Depositar con Bloqueo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onClickLockedWithdraw(),\n        children: \"Retirar con Bloqueo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"4B5OpVimwVTyUx9nBso0xc5Rnl0=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 140,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","detectEthereumProvider","Contract","ethers","useState","useEffect","useRef","bankManifest","jsxDEV","_jsxDEV","App","_s","bank","bnbBalance","setBNBBalance","interestGenerated","setInterestGenerated","bmiwBalance","setBMIWBalance","initContracts","updateBalances","clickWithdrawWithFee","feeAmount","tx","current","withdrawWithFee","value","utils","parseEther","String","wait","getBNBBalance","getInterestGenerated","getBMIWBalance","toString","error","console","getBlockchain","onSubmitDeposit","e","preventDefault","BNBamount","parseFloat","target","elements","deposit","gasLimit","gasPrice","clickWithdraw","withdraw","provider","request","method","networkId","providers","Web3Provider","signer","getSigner","networks","address","abi","onSubmitLockedDeposit","depositWithDoubleInterestAndLock","onClickLockedWithdraw","withdrawWithLock","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","step","onClick","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/Users/tonny/blockchain/bank/my-app/src/index.js"],"sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport {Contract, ethers} from \"ethers\";\nimport { useState, useEffect, useRef } from 'react';\nimport bankManifest from \"./contracts/Bank.json\";\n\nfunction App(){\n  const bank = useRef(null);\n  const [bnbBalance, setBNBBalance] = useState(0);\n  const [interestGenerated, setInterestGenerated] = useState(0);\n  const [bmiwBalance, setBMIWBalance] = useState(0);\n  \n  useEffect( () => {\n      initContracts();\n      updateBalances();\n  }, [])\n  let clickWithdrawWithFee = async () => {\n    const feeAmount = 0.05;\n  \n    // Realizar el retiro con la tarifa\n    const tx = await bank.current.withdrawWithFee({\n      value: ethers.utils.parseEther(String(feeAmount)),\n   \n    });\n  \n    await tx.wait();\n    updateBalances();\n  }\n  \n  let updateBalances = async () => {\n    if (bank.current) {\n      try {\n      const bnbBalance = await bank.current.getBNBBalance();\n      const interestGenerated = await bank.current.getInterestGenerated();\n      const bmiwBalance = await bank.current.getBMIWBalance();\n  \n      setBNBBalance(bnbBalance.toString());\n      setInterestGenerated(interestGenerated.toString());\n      setBMIWBalance(bmiwBalance.toString());\n    } catch (error) {\n      console.error(\"Error updating balances:\", error);\n    }\n    }\n  };\n  let initContracts = async () => {\n      await getBlockchain();\n  }\n  \nlet onSubmitDeposit = async (e) => {\n  e.preventDefault();\n\n  const BNBamount = parseFloat(e.target.elements[0].value);\n\n  // Wei to BNB se pasa con ethers.utils recibe un String!!!\n  const tx = await bank.current.deposit({\n      value: ethers.utils.parseEther(String(BNBamount)),\n      gasLimit: 6721975,\n      gasPrice: 20000000000,\n  });\n\n  await tx.wait();\n  updateBalances();\n}\nlet clickWithdraw = async (e) => {\n  \n  await await bank.current.withdraw();\n  updateBalances();\n}\n\n\n\n  let getBlockchain = async () => {\n      let provider = await detectEthereumProvider();\n      if(provider) {\n          await provider.request({ method: 'eth_requestAccounts' });\n          const networkId = await provider.request({ method: 'net_version' })\n\n          provider = new ethers.providers.Web3Provider(provider);\n          const signer = provider.getSigner();\n\n          bank.current = new Contract(\n              bankManifest.networks[networkId].address,\n              bankManifest.abi,\n              signer\n          );\n\n      }\n      return null;\n  }\n  const onSubmitLockedDeposit = async (e) => {\n    e.preventDefault();\n\n    const BNBamount = parseFloat(e.target.elements[0].value);\n\n    const tx = await bank.current.depositWithDoubleInterestAndLock({\n      value: ethers.utils.parseEther(String(BNBamount)),\n      gasLimit: 6721975,\n      gasPrice: 20000000000,\n    });\n\n    await tx.wait();\n  }\n  const onClickLockedWithdraw = async () => {\n    await await bank.current.withdrawWithLock();\n  }\n\n\n  return (\n      <div>\n          <h1>Bank</h1>\n          <p>BNB Balance: {bnbBalance} BNB</p>\n          <p>Interest Generated: {interestGenerated} BNB</p>\n        <p>BMIW Balance: {bmiwBalance} BMIW</p>\n        <div>\n        <h2>Depósito con Interés Normal</h2>\n          <form onSubmit= { (e) => onSubmitDeposit(e) } >\n                <input type=\"number\" step=\"0.01\" />\n                <button type=\"submit\">Deposit</button>\n            </form>\n            <button onClick= { () => clickWithdraw() } > Withdraw </button>\n         <button onClick={() => clickWithdrawWithFee()}>Withdraw with Fee</button>\n         </div>\n         <div>\n        <h2>Depósito con el Doble de Interés y Bloqueo</h2>\n        <form onSubmit={(e) => onSubmitLockedDeposit(e)}>\n          <input type=\"number\" step=\"0.01\" />\n          <button type=\"submit\">Depositar con Bloqueo</button>\n        </form>\n        <button onClick={() => onClickLockedWithdraw()}>Retirar con Bloqueo</button>\n      </div>\n      </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}